import type { ServerStory } from '@histoire/shared';
import type { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    title: {
        type: StringConstructor;
        default: any;
    };
    id: {
        type: StringConstructor;
        default: any;
    };
    group: {
        type: StringConstructor;
        default: any;
    };
    layout: {
        type: PropType<ServerStory["layout"]>;
        default: any;
    };
    icon: {
        type: StringConstructor;
        default: any;
    };
    iconColor: {
        type: StringConstructor;
        default: any;
    };
    docsOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    meta: {
        type: PropType<ServerStory["meta"]>;
        default: any;
    };
}>, {
    story: ServerStory;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    title: {
        type: StringConstructor;
        default: any;
    };
    id: {
        type: StringConstructor;
        default: any;
    };
    group: {
        type: StringConstructor;
        default: any;
    };
    layout: {
        type: PropType<ServerStory["layout"]>;
        default: any;
    };
    icon: {
        type: StringConstructor;
        default: any;
    };
    iconColor: {
        type: StringConstructor;
        default: any;
    };
    docsOnly: {
        type: BooleanConstructor;
        default: boolean;
    };
    meta: {
        type: PropType<ServerStory["meta"]>;
        default: any;
    };
}>> & Readonly<{}>, {
    meta: any;
    title: string;
    id: string;
    group: string;
    layout: import("@histoire/shared").StoryLayout;
    icon: string;
    iconColor: string;
    docsOnly: boolean;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default _default;
