import type { Variant } from '@histoire/shared';
import type { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    initState: {
        type: PropType<() => any | Promise<any>>;
        default: any;
    };
    source: {
        type: StringConstructor;
        default: any;
    };
    responsiveDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    autoPropsDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    setupApp: {
        type: FunctionConstructor;
        default: any;
    };
    meta: {
        type: PropType<Variant["meta"]>;
        default: any;
    };
}>, {
    updateVariant: () => void;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    initState: {
        type: PropType<() => any | Promise<any>>;
        default: any;
    };
    source: {
        type: StringConstructor;
        default: any;
    };
    responsiveDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    autoPropsDisabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    setupApp: {
        type: FunctionConstructor;
        default: any;
    };
    meta: {
        type: PropType<Variant["meta"]>;
        default: any;
    };
}>> & Readonly<{}>, {
    meta: any;
    initState: () => any | Promise<any>;
    source: string;
    responsiveDisabled: boolean;
    autoPropsDisabled: boolean;
    setupApp: Function;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default _default;
